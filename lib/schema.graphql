input CreateInterpreterInput {
    name: String!
    available: Boolean!
    email: String!
    skills: [SkillInput]
}

input DeleteInterpreterInput {
    id: ID!
}

type Interpreter {
    id: ID
    name: String
    skills: [Skill]
    available: Boolean
    email: AWSEmail
    videoLink: String
}

type InterpreterConnection {
    items: [Interpreter]
    nextToken: String
}

type Mutation {
    createInterpreter(input: CreateInterpreterInput!): Interpreter
    updateInterpreter(input: UpdateInterpreterInput!): Interpreter
    deleteInterpreter(input: DeleteInterpreterInput!): Interpreter
}

type Query {
    getHelp(skillName: SkillName, minSkillLevel: SkillLevel): Interpreter
    getInterpreter(id: ID!): Interpreter
    listInterpreters(
        filter: TableInterpreterFilterInput
        limit: Int
        nextToken: String
    ): InterpreterConnection
}

type Skill {
    name: SkillName
    level: SkillLevel
}

input SkillInput {
    name: SkillName!
    level: SkillLevel!
}

enum SkillLevel {
    BASIC
    FLUENT
    PROFESSIONAL
    NATIVE
}

enum SkillName {
    TRANSLATION
}

input TableBooleanFilterInput {
    ne: Boolean
    eq: Boolean
}

input TableFloatFilterInput {
    ne: Float
    eq: Float
    le: Float
    lt: Float
    ge: Float
    gt: Float
    contains: Float
    notContains: Float
    between: [Float]
}

input TableIDFilterInput {
    ne: ID
    eq: ID
    le: ID
    lt: ID
    ge: ID
    gt: ID
    contains: ID
    notContains: ID
    between: [ID]
    beginsWith: ID
}

input TableIntFilterInput {
    ne: Int
    eq: Int
    le: Int
    lt: Int
    ge: Int
    gt: Int
    contains: Int
    notContains: Int
    between: [Int]
}

input TableInterpreterFilterInput {
    id: TableIDFilterInput
    name: TableStringFilterInput
    available: TableBooleanFilterInput
    email: TableStringFilterInput
}

input TableStringFilterInput {
    ne: String
    eq: String
    le: String
    lt: String
    ge: String
    gt: String
    contains: String
    notContains: String
    between: [String]
    beginsWith: String
}

input UpdateInterpreterInput {
    id: ID!
    name: String
    available: Boolean
    email: String
    videoLink: String
}
